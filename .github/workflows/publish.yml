name: Publish to jsr
on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Publish package
        id: publish
        run: |
          TEMP_OUTPUT=$(mktemp)
          npx jsr publish 2>&1 | tee "$TEMP_OUTPUT"
          OUTPUT=$(<"$TEMP_OUTPUT")
          rm "$TEMP_OUTPUT"
          if [[ $OUTPUT =~ Visit\ (https://jsr\.io/[^[:space:]]+)\ for\ details ]]; then
            JSR_URL="${BASH_REMATCH[1]}"
            PACKAGE_VERSION="${JSR_URL##*/}"
            VERSION="${PACKAGE_VERSION##*@}"
            echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "jsr_url=$JSR_URL" >> $GITHUB_OUTPUT
            echo "Version found: $VERSION"
          else
            echo "Version not found"
          fi

      - name: Create Git Tag
        if: steps.publish.outputs.version != ''
        run: |
          git tag v${{ steps.publish.outputs.version }}
          git push origin v${{ steps.publish.outputs.version }}

      - name: Create GitHub Release
        if: steps.publish.outputs.version != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          name: Release v${{ steps.publish.outputs.version }}
          body: |
            Release of version ${{ steps.publish.outputs.version }}

            ðŸ“¦ Package: `${{ steps.publish.outputs.package_version }}`
            ðŸ”— JSR URL: ${{ steps.publish.outputs.jsr_url }}

          draft: false
          prerelease: ${{ contains(steps.publish.outputs.version, 'alpha') || contains(steps.publish.outputs.version, 'beta') || contains(steps.publish.outputs.version, 'rc') }}
